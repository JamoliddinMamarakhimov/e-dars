[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 15:46:37 | 404 |      3.8038ms |             ::1 | PATCH    "/users/api/v1/change-password"
[GIN] 2024/09/23 - 15:47:00 | 200 |      4.3884ms |             ::1 | PATCH    "/users/api/v1/change-password"
[GIN] 2024/09/23 - 15:47:04 | 404 |       791.8Âµs |             ::1 | PATCH    "/users/api/v1/change-password"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 16:01:01 | 404 |      4.2701ms |             ::1 | PATCH    "/users/api/v1/change-password"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 16:02:16 | 400 |      3.3954ms |             ::1 | PATCH    "/users/api/v1/change-password"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 16:06:35 | 404 |            0s |             ::1 | PUT      "/classes/api/v1/update/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 16:09:26 | 404 |            0s |             ::1 | PUT      "/classes/api/v1/update/"
[GIN] 2024/09/23 - 16:09:27 | 200 |       432.8Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/23 - 16:09:27 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/23 - 16:09:27 | 200 |       511.7Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/23 - 16:09:27 | 200 |      1.0477ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/23 - 16:09:28 | 200 |       302.2Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/23 - 16:09:28 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/23 - 16:09:48 | 400 |      1.6042ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/23 - 16:09:57 | 200 |      1.9582ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/23 - 16:10:49 | 404 |            0s |             ::1 | PUT      "/classes/api/v1/update/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 16:13:09 | 200 |       170.6Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/23 - 16:13:09 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/23 - 16:13:09 | 200 |       505.2Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/23 - 16:13:09 | 200 |       1.029ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/23 - 16:13:09 | 200 |       934.7Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/23 - 16:13:09 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/23 - 16:13:28 | 200 |      2.7987ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/23 - 16:14:04 | 404 |            0s |             ::1 | PUT      "/classes/api/v1/update/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 16:15:47 | 404 |            0s |             ::1 | PUT      "/classes/api/v1/update/"
[GIN] 2024/09/23 - 16:15:50 | 200 |         166Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/23 - 16:15:50 | 200 |       323.2Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/23 - 16:15:50 | 200 |       522.1Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/23 - 16:15:50 | 200 |      1.0268ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/23 - 16:15:50 | 200 |         811Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/23 - 16:15:50 | 200 |       2.462ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/23 - 16:16:07 | 200 |      2.3635ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/23 - 16:16:36 | 200 |      3.5102ms |             ::1 | PUT      "/classes/api/v1/update/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN] 2024/09/23 - 16:42:05 | 200 |       625.3Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/23 - 16:42:05 | 200 |       590.9Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/23 - 16:42:05 | 200 |       590.9Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/23 - 16:42:05 | 200 |       1.095ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/23 - 16:42:05 | 200 |       674.4Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/23 - 16:42:05 | 200 |       278.5Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/23 - 16:42:22 | 200 |      2.3053ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2024/09/23 - 16:42:56 | 400 |      1.7451ms |             ::1 | DELETE   "/classes/api/v1/delete/1"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2024/09/23 - 16:43:51 | 400 |      2.2396ms |             ::1 | DELETE   "/classes/api/v1/return/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN] 2024/09/23 - 16:47:34 | 200 |      1.1295ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/23 - 16:47:34 | 200 |       581.2Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/23 - 16:47:34 | 200 |       581.2Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/23 - 16:47:34 | 200 |      1.1858ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/23 - 16:47:34 | 200 |       158.4Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/23 - 16:47:34 | 200 |       951.8Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/23 - 16:47:52 | 200 |      2.3368ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/23 - 16:48:20 | 200 |      4.4902ms |             ::1 | DELETE   "/classes/api/v1/delete/1"
[GIN] 2024/09/23 - 16:48:44 | 200 |      2.8338ms |             ::1 | DELETE   "/classes/api/v1/return/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN] 2024/09/24 - 10:20:26 | 200 |       975.7Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 10:20:26 | 200 |       562.1Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 10:20:26 | 200 |       562.1Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 10:20:26 | 200 |      1.1629ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 10:20:26 | 200 |       156.8Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 10:20:26 | 200 |         998Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 11:40:23 | 200 |     21.9079ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 11:41:06 | 200 |      3.9867ms |             ::1 | GET      "/classes/api/v1/1"
[GIN-debug] redirecting request 307: /classes/api/v1/set --> /classes/api/v1/set
[GIN] 2024/09/24 - 11:42:00 | 500 |     25.8291ms |             ::1 | POST     "/classes/api/v1/set"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN] 2024/09/24 - 11:44:13 | 200 |      2.2496ms |             ::1 | GET      "/classes/api/v1/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (3 handlers)
[GIN] 2024/09/24 - 12:43:03 | 200 |      2.6035ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 12:43:03 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 12:43:03 | 200 |       568.1Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 12:43:03 | 200 |      9.6741ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 12:43:03 | 200 |       317.1Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 12:43:03 | 200 |      2.2582ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 12:43:27 | 200 |      6.0072ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 12:44:05 | 200 |      4.4341ms |             ::1 | PATCH    "/users/api/v1/change-password"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (3 handlers)
[GIN] 2024/09/24 - 12:46:47 | 200 |      1.4926ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 12:46:47 | 200 |      1.4587ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 12:46:47 | 200 |       589.6Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 12:46:47 | 200 |      1.1678ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 12:46:47 | 200 |      1.4214ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 12:46:47 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (3 handlers)
[GIN] 2024/09/24 - 12:47:38 | 200 |      4.4797ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 12:49:08 | 403 |            0s |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (3 handlers)
[GIN] 2024/09/24 - 12:51:11 | 200 |       283.1Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 12:51:11 | 200 |       288.4Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 12:51:11 | 200 |       539.5Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 12:51:11 | 200 |      5.2854ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 12:51:11 | 200 |       977.8Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 12:51:11 | 200 |      1.3219ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 12:51:32 | 200 |      2.7598ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 12:53:22 | 403 |            0s |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN] 2024/09/24 - 12:53:59 | 200 |       596.5Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 12:53:59 | 200 |       595.8Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 12:53:59 | 200 |       595.8Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 12:53:59 | 200 |      1.1036ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 12:53:59 | 200 |       309.5Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 12:53:59 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 12:54:20 | 200 |      3.0536ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 201
[GIN] 2024/09/24 - 12:55:24 | 400 |      6.7571ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 201
[GIN] 2024/09/24 - 12:59:57 | 400 |      3.6822ms |             ::1 | POST     "/schedules/api/v1/"
[GIN] 2024/09/24 - 13:03:16 | 201 |      3.4312ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN] 2024/09/24 - 14:04:11 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 14:04:11 | 200 |       664.2Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 14:04:11 | 200 |      1.9287ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 14:04:11 | 200 |       754.7Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 14:04:11 | 200 |       860.7Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 14:04:11 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 14:04:41 | 200 |      2.3366ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 204 with 200
[GIN] 2024/09/24 - 14:05:15 | 204 |      1.8649ms |             ::1 | GET      "/schedules/api/v1/"
Error #01: http: request method or response status code does not allow body
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN] 2024/09/24 - 14:06:37 | 200 |       796.3Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 14:06:37 | 200 |         930Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 14:06:37 | 200 |       604.1Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 14:06:37 | 200 |       1.626ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 14:06:37 | 200 |      1.0012ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 14:06:37 | 200 |       851.9Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 14:07:07 | 200 |      2.3289ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 204 with 200
[GIN] 2024/09/24 - 14:07:28 | 204 |       980.1Âµs |             ::1 | GET      "/schedules/api/v1/"
Error #01: http: request method or response status code does not allow body
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN] 2024/09/24 - 14:12:38 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 14:12:38 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 14:12:38 | 200 |      4.6128ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 14:12:38 | 200 |       609.3Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 14:12:38 | 200 |        99.9Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 14:12:38 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 14:12:50 | 200 |      2.2707ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 14:13:15 | 200 |      2.1692ms |             ::1 | GET      "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN] 2024/09/24 - 14:55:55 | 200 |      2.5612ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 14:55:55 | 200 |      1.0833ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 14:55:55 | 200 |      1.7997ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 14:55:55 | 200 |      2.3053ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 14:55:55 | 200 |      3.1571ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 14:56:12 | 200 |     10.7445ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 14:56:59 | 200 |     10.8589ms |             ::1 | GET      "/schedules/api/v1/2"
[GIN] 2024/09/24 - 15:02:13 | 200 |       3.401ms |             ::1 | GET      "/schedules/api/v1/3"
[GIN] 2024/09/24 - 15:02:20 | 200 |       173.1Âµs |             ::1 | GET      "/schedules/api/v1/3"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN] 2024/09/24 - 15:31:04 | 200 |       944.2Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 15:31:04 | 200 |       506.8Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 15:31:04 | 200 |       506.8Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 15:31:04 | 200 |      1.0274ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 15:31:04 | 200 |       1.113ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 15:31:04 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 15:31:25 | 200 |      2.7821ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2024/09/24 - 15:32:53 | 400 |     11.1283ms |             ::1 | PUT      "/schedules/api/v1/update/2"
[GIN] 2024/09/24 - 15:33:11 | 200 |      9.2453ms |             ::1 | PUT      "/schedules/api/v1/update/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:01:55 | 200 |        63.7Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 16:01:55 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 16:01:55 | 200 |       504.2Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 16:01:55 | 200 |      1.0335ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 16:01:55 | 200 |       951.6Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 16:01:55 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 16:02:12 | 200 |      4.7912ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 16:05:23 | 200 |      7.3493ms |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN] 2024/09/24 - 16:05:35 | 200 |       639.8Âµs |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN] 2024/09/24 - 16:05:38 | 200 |       747.7Âµs |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:06:47 | 200 |       1.468ms |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:07:31 | 200 |      2.0839ms |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:09:58 | 200 |      1.0739ms |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:10:56 | 200 |      1.7526ms |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:15:31 | 500 |      3.9251ms |             ::1 | DELETE   "/schedules/api/v1/delete/2"
[GIN] 2024/09/24 - 16:15:47 | 200 |      3.4487ms |             ::1 | DELETE   "/schedules/api/v1/delete/1"
[GIN] 2024/09/24 - 16:15:57 | 500 |      1.0015ms |             ::1 | DELETE   "/schedules/api/v1/delete/1"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:48:00 | 200 |       601.6Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/24 - 16:48:00 | 200 |       147.2Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/24 - 16:48:00 | 200 |      1.6637ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/24 - 16:48:00 | 200 |       526.7Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/24 - 16:48:01 | 200 |       569.4Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/24 - 16:48:01 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/24 - 16:48:18 | 200 |       5.122ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/24 - 16:49:36 | 201 |      7.1297ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 16:53:08 | 201 |      8.4448ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/24 - 17:06:51 | 201 |       3.501ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/25 - 09:47:14 | 200 |      2.7369ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 09:47:14 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 09:47:14 | 200 |       597.9Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 09:47:14 | 200 |      1.1056ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 09:47:14 | 200 |      1.5319ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 09:47:14 | 200 |         693Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 09:47:34 | 200 |      5.4003ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 09:48:32 | 201 |      6.7196ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/25 - 09:50:52 | 201 |      4.5759ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN] 2024/09/25 - 10:41:19 | 201 |      5.8056ms |             ::1 | POST     "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN] 2024/09/25 - 10:57:51 | 200 |       951.7Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 10:57:51 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 10:57:51 | 200 |       506.3Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 10:57:51 | 200 |      1.0805ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 10:57:51 | 200 |       417.6Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 10:57:51 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 10:58:07 | 200 |      5.4202ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 10:58:47 | 201 |       575.4Âµs |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN] 2024/09/25 - 11:01:37 | 201 |      6.9426ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN] 2024/09/25 - 11:12:48 | 500 |      3.6634ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN] 2024/09/25 - 11:14:27 | 500 |      3.6559ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN] 2024/09/25 - 11:14:58 | 500 |      5.1138ms |             ::1 | POST     "/journal/api/v1/"
[GIN] 2024/09/25 - 11:15:39 | 500 |      2.7221ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN] 2024/09/25 - 11:18:05 | 201 |      6.0172ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN] 2024/09/25 - 12:00:19 | 200 |       789.4Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 12:00:19 | 200 |       700.2Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 12:00:19 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 12:00:19 | 200 |      3.8471ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 12:00:20 | 200 |       498.9Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 12:00:20 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 12:00:41 | 200 |      1.9506ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 12:01:04 | 200 |      1.6648ms |             ::1 | GET      "/journal/api/v1/"
[GIN] 2024/09/25 - 12:16:10 | 200 |        50.2Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 12:16:10 | 404 |            0s |             ::1 | GET      "/favicon.ico"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN] 2024/09/25 - 13:40:06 | 201 |     23.6428ms |             ::1 | POST     "/auth/api/v1/sign-up"
[GIN] 2024/09/25 - 13:40:16 | 200 |      8.6396ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 13:41:11 | 201 |       5.592ms |             ::1 | POST     "/classes/api/v1/"
[GIN] 2024/09/25 - 13:41:36 | 201 |      2.5675ms |             ::1 | POST     "/classes/api/v1/"
[GIN] 2024/09/25 - 13:42:01 | 201 |      1.8223ms |             ::1 | POST     "/classes/api/v1/"
[GIN] 2024/09/25 - 13:42:07 | 200 |      5.5405ms |             ::1 | GET      "/classes/api/v1/"
[GIN] 2024/09/25 - 13:43:27 | 201 |       2.587ms |             ::1 | POST     "/users/api/v1/"
[GIN] 2024/09/25 - 13:44:11 | 201 |      2.2703ms |             ::1 | POST     "/users/api/v1/"
[GIN] 2024/09/25 - 13:44:59 | 201 |      2.6615ms |             ::1 | POST     "/users/api/v1/"
[GIN] 2024/09/25 - 13:46:07 | 201 |      2.8275ms |             ::1 | POST     "/users/api/v1/"
[GIN] 2024/09/25 - 13:46:36 | 201 |      1.7914ms |             ::1 | POST     "/users/api/v1/"
[GIN] 2024/09/25 - 13:47:02 | 201 |       2.716ms |             ::1 | POST     "/users/api/v1/"
[GIN] 2024/09/25 - 13:47:44 | 201 |      4.0242ms |             ::1 | POST     "/users/api/v1/"
[GIN] 2024/09/25 - 13:48:13 | 201 |      1.8047ms |             ::1 | POST     "/users/api/v1/"
[GIN-debug] redirecting request 307: /classes/api/v1/set --> /classes/api/v1/set
[GIN] 2024/09/25 - 13:50:28 | 201 |      3.4635ms |             ::1 | POST     "/classes/api/v1/set"
[GIN-debug] redirecting request 307: /classes/api/v1/set --> /classes/api/v1/set
[GIN] 2024/09/25 - 13:50:39 | 201 |      3.2456ms |             ::1 | POST     "/classes/api/v1/set"
[GIN-debug] redirecting request 307: /classes/api/v1/set --> /classes/api/v1/set
[GIN] 2024/09/25 - 13:50:46 | 500 |      2.0484ms |             ::1 | POST     "/classes/api/v1/set"
[GIN-debug] redirecting request 307: /classes/api/v1/set --> /classes/api/v1/set
[GIN] 2024/09/25 - 13:51:07 | 201 |      3.5847ms |             ::1 | POST     "/classes/api/v1/set"
[GIN] 2024/09/25 - 13:52:35 | 201 |      9.2529ms |             ::1 | POST     "/schedules/api/v1/"
[GIN] 2024/09/25 - 13:52:53 | 201 |      5.7512ms |             ::1 | POST     "/schedules/api/v1/"
[GIN] 2024/09/25 - 13:53:09 | 201 |      8.8968ms |             ::1 | POST     "/schedules/api/v1/"
[GIN] 2024/09/25 - 13:53:38 | 201 |      8.8208ms |             ::1 | POST     "/schedules/api/v1/"
[GIN] 2024/09/25 - 13:53:51 | 201 |      4.6088ms |             ::1 | POST     "/schedules/api/v1/"
[GIN] 2024/09/25 - 13:54:06 | 201 |       7.823ms |             ::1 | POST     "/schedules/api/v1/"
[GIN] 2024/09/25 - 13:54:14 | 200 |      3.3947ms |             ::1 | GET      "/schedules/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:06:24 | 200 |       338.2Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 15:06:24 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 15:06:24 | 200 |       642.2Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 15:06:24 | 200 |      1.1461ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 15:06:24 | 200 |      1.1564ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 15:06:24 | 200 |       344.7Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 15:06:41 | 400 |      4.0458ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 15:06:50 | 200 |      1.3521ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:09:04 | 200 |      1.3215ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 15:09:04 | 200 |       395.5Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 15:09:04 | 200 |       621.8Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 15:09:04 | 200 |      1.0173ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 15:09:04 | 200 |       633.8Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 15:09:04 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 15:09:24 | 200 |      2.0204ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:13:11 | 200 |      3.7015ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 15:13:11 | 200 |       504.6Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 15:13:11 | 200 |       746.2Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 15:13:11 | 200 |      1.3825ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 15:13:11 | 200 |       491.1Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 15:13:11 | 200 |        1.87ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 15:13:28 | 200 |      2.1422ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 15:14:16 | 403 |            0s |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:15:35 | 500 |      7.9898ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:16:23 | 500 |       3.728ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:17:26 | 500 |      5.2783ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:38:34 | 500 |        9.05ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:40:23 | 500 |      5.1972ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:44:38 | 200 |      4.1117ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:46:25 | 200 |      3.9073ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:51:47 | 200 |      3.2026ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:53:31 | 500 |      9.2849ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 15:57:32 | 200 |      4.1965ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 16:04:27 | 200 |      6.6775ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 16:10:34 | 200 |      5.6956ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 16:13:52 | 401 |       613.1Âµs |             ::1 | POST     "/journal/api/v1/notes"
[GIN] 2024/09/25 - 16:14:01 | 200 |      1.9865ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 16:14:27 | 200 |      3.2704ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN] 2024/09/25 - 16:15:00 | 200 |      1.3259ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 16:15:23 | 200 |      3.8663ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 16:47:09 | 200 |       910.3Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 16:47:09 | 200 |       166.1Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 16:47:09 | 200 |       175.8Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 16:47:09 | 200 |      1.5506ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 16:47:09 | 200 |       484.9Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 16:47:10 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 16:47:27 | 200 |      2.2138ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 16:48:03 | 200 |      4.3961ms |             ::1 | GET      "/journal/api/v1/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 16:50:17 | 200 |      4.1022ms |             ::1 | GET      "/journal/api/v1/2"
[GIN] 2024/09/25 - 16:50:22 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 16:50:22 | 200 |         506Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 16:50:22 | 200 |      1.0358ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 16:50:22 | 200 |      1.5875ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 16:50:22 | 200 |       338.7Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 16:50:22 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 16:50:47 | 200 |      1.8201ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 16:51:21 | 200 |      2.2526ms |             ::1 | GET      "/journal/api/v1/3"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 16:53:34 | 200 |      4.8799ms |             ::1 | GET      "/journal/api/v1/3"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] PATCH  /journal/api/v1/mark      --> e-dars/pkg/controllers.SetMarkToJournal (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 18:57:49 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 18:57:50 | 200 |         815Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 18:57:50 | 200 |         507Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 18:57:50 | 200 |         507Âµs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 18:57:50 | 200 |       624.6Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 18:58:22 | 200 |     10.7143ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] PATCH  /journal/api/v1/mark      --> e-dars/pkg/controllers.SetMarkToJournal (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 19:01:06 | 200 |       769.7Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 19:01:06 | 200 |          61Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 19:01:06 | 200 |       642.7Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 19:01:06 | 200 |       1.147ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 19:01:06 | 200 |       697.1Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 19:01:06 | 200 |       199.5Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 19:01:24 | 200 |      5.2446ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] PATCH  /journal/api/v1/mark      --> e-dars/pkg/controllers.SetMarkToJournal (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 19:04:53 | 201 |     11.2218ms |             ::1 | PATCH    "/journal/api/v1/mark"
[GIN] 2024/09/25 - 19:06:45 | 403 |            0s |             ::1 | POST     "/journal/api/v1/notes"
[GIN] 2024/09/25 - 19:07:00 | 403 |            0s |             ::1 | GET      "/journal/api/v1/"
[GIN] 2024/09/25 - 19:07:22 | 201 |      5.3121ms |             ::1 | PATCH    "/journal/api/v1/mark"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] PATCH  /journal/api/v1/mark      --> e-dars/pkg/controllers.SetMarkToJournal (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] PATCH  /journal/api/v1/mark      --> e-dars/pkg/controllers.SetMarkToJournal (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 22:56:39 | 200 |      7.5814ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 22:56:39 | 200 |      1.0423ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 22:56:39 | 200 |      1.5647ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 22:56:39 | 200 |      2.6202ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 22:56:40 | 200 |      1.7542ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 22:56:40 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 22:56:52 | 200 |     25.8195ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 22:58:24 | 201 |     12.9902ms |             ::1 | PATCH    "/journal/api/v1/mark"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] PATCH  /journal/api/v1/mark      --> e-dars/pkg/controllers.SetMarkToJournal (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 23:00:09 | 200 |       506.3Âµs |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 23:00:52 | 200 |     13.0234ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/25 - 23:50:32 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/25 - 23:50:32 | 200 |       514.3Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/25 - 23:50:32 | 200 |       514.3Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/25 - 23:50:32 | 200 |       1.043ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/25 - 23:50:32 | 200 |       309.9Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/25 - 23:50:32 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/25 - 23:50:49 | 200 |      9.1309ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/25 - 23:51:20 | 403 |            0s |             ::1 | GET      "/journal/api/v1/"
[GIN] 2024/09/25 - 23:52:28 | 201 |       9.973ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/26 - 00:21:59 | 200 |      1.3933ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 00:23:02 | 200 |      6.5996ms |             ::1 | POST     "/journal/api/v1/notes"
[GIN] 2024/09/26 - 00:26:20 | 403 |            0s |             ::1 | POST     "/journal/api/v1/"
[GIN] 2024/09/26 - 00:26:44 | 200 |      1.0756ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 00:27:15 | 401 |       398.8Âµs |             ::1 | POST     "/journal/api/v1/"
[GIN] 2024/09/26 - 00:27:25 | 200 |      1.7366ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 00:27:53 | 201 |      2.3591ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/26 - 00:56:24 | 200 |       383.3Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/26 - 00:56:24 | 200 |       693.2Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/26 - 00:56:24 | 200 |      1.7867ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/26 - 00:56:24 | 200 |       587.5Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/26 - 00:56:25 | 200 |       646.1Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/26 - 00:56:25 | 200 |       999.6Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/26 - 00:56:40 | 200 |      8.8676ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 00:58:01 | 500 |      7.7875ms |             ::1 | POST     "/journal/api/v1/"
[GIN] 2024/09/26 - 00:58:34 | 500 |      3.7206ms |             ::1 | POST     "/journal/api/v1/"
[GIN] 2024/09/26 - 00:58:46 | 500 |       2.447ms |             ::1 | POST     "/journal/api/v1/"
[GIN] 2024/09/26 - 00:59:17 | 201 |     11.6704ms |             ::1 | POST     "/journal/api/v1/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/26 - 01:29:49 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/26 - 01:29:49 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/26 - 01:29:49 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/26 - 01:29:49 | 200 |      2.0086ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/26 - 01:29:49 | 200 |         507Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/26 - 01:29:49 | 200 |       617.2Âµs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/26 - 01:30:09 | 400 |      7.5318ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 01:30:47 | 200 |     11.6471ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 01:30:49 | 200 |       7.808ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 01:31:44 | 403 |            0s |             ::1 | POST     "/journal/api/v1/notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] POST   /journal/api/v1/my-notes  --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN] 2024/09/26 - 01:33:08 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/26 - 01:33:08 | 200 |       184.8Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/26 - 01:33:08 | 200 |       184.8Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/26 - 01:33:08 | 200 |     13.3293ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/26 - 01:33:08 | 200 |      6.9897ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/26 - 01:33:08 | 200 |      3.5093ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/26 - 01:33:18 | 200 |      7.2074ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 01:34:00 | 403 |            0s |             ::1 | POST     "/journal/api/v1/my-notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] POST   /journal/api/v1/my-notes  --> e-dars/pkg/controllers.GetJournalNotesByStudent (4 handlers)
[GIN] 2024/09/26 - 01:35:43 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/26 - 01:35:43 | 200 |         384Âµs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/26 - 01:35:43 | 200 |         868Âµs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/26 - 01:35:43 | 200 |       507.7Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/26 - 01:35:43 | 200 |      1.2839ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/26 - 01:35:43 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/26 - 01:36:02 | 200 |      1.3536ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 01:36:46 | 200 |     13.2493ms |             ::1 | POST     "/journal/api/v1/my-notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] POST   /journal/api/v1/my-notes  --> e-dars/pkg/controllers.GetJournalNotesByStudent (4 handlers)
[GIN] 2024/09/26 - 02:09:29 | 200 |       454.5Âµs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/26 - 02:09:29 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/26 - 02:09:29 | 200 |       508.7Âµs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/26 - 02:09:29 | 200 |      2.2209ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/26 - 02:09:29 | 200 |      1.0452ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/26 - 02:09:29 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/26 - 02:09:43 | 200 |      8.8348ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 02:10:25 | 404 |            0s |             ::1 | POST     "/journal/api/v1/teacher-notes"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-up      --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/api/v1/sign-in      --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users/api/v1/            --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/api/v1/:id         --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users/api/v1/            --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] PUT    /users/api/v1/:id         --> e-dars/pkg/controllers.UpdateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/deactivate/:id --> e-dars/pkg/controllers.DeActivateUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/activate/:id --> e-dars/pkg/controllers.ActivateUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/delete/:id  --> e-dars/pkg/controllers.DeleteUser (4 handlers)
[GIN-debug] DELETE /users/api/v1/return/:id  --> e-dars/pkg/controllers.ReturnUser (4 handlers)
[GIN-debug] PATCH  /users/api/v1/reset-password/:id --> e-dars/pkg/controllers.ResetUserPasswordByAdmin (4 handlers)
[GIN-debug] PATCH  /users/api/v1/change-password --> e-dars/pkg/controllers.ChangeOwnPasswordByUser (4 handlers)
[GIN-debug] POST   /classes/api/v1/          --> e-dars/pkg/controllers.CreateNewClass (4 handlers)
[GIN-debug] GET    /classes/api/v1/          --> e-dars/pkg/controllers.GetAllClasses (4 handlers)
[GIN-debug] GET    /classes/api/v1/:id       --> e-dars/pkg/controllers.GetClassByID (4 handlers)
[GIN-debug] POST   /classes/api/v1/set       --> e-dars/pkg/controllers.SetClassTeacher (4 handlers)
[GIN-debug] PUT    /classes/api/v1/update/:id --> e-dars/pkg/controllers.UpdateClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteClass (4 handlers)
[GIN-debug] DELETE /classes/api/v1/return/:id --> e-dars/pkg/controllers.ReturnClass (4 handlers)
[GIN-debug] POST   /schedules/api/v1/        --> e-dars/pkg/controllers.CreateNewScheduleNote (4 handlers)
[GIN-debug] GET    /schedules/api/v1/        --> e-dars/pkg/controllers.GetAllScheduleNotes (4 handlers)
[GIN-debug] GET    /schedules/api/v1/:id     --> e-dars/pkg/controllers.GetScheduleNoteByID (4 handlers)
[GIN-debug] PUT    /schedules/api/v1/update/:id --> e-dars/pkg/controllers.UpdateScheduleNote (4 handlers)
[GIN-debug] DELETE /schedules/api/v1/delete/:id --> e-dars/pkg/controllers.DeleteScheduleNote (4 handlers)
[GIN-debug] POST   /journal/api/v1/          --> e-dars/pkg/controllers.CreateJournalNote (4 handlers)
[GIN-debug] GET    /journal/api/v1/          --> e-dars/pkg/controllers.GetAllJournalNotes (4 handlers)
[GIN-debug] GET    /journal/api/v1/:id       --> e-dars/pkg/controllers.GetJournalNoteByID (4 handlers)
[GIN-debug] POST   /journal/api/v1/notes     --> e-dars/pkg/controllers.GetJournalNotesByParentIDAndDate (4 handlers)
[GIN-debug] POST   /journal/api/v1/my-notes  --> e-dars/pkg/controllers.GetJournalNotesByStudent (4 handlers)
[GIN-debug] POST   /journal/api/v1/teacher-notes --> e-dars/pkg/controllers.GetJournalNotesByTeacher (4 handlers)
[GIN] 2024/09/26 - 02:11:06 | 200 |      1.0077ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/26 - 02:11:06 | 200 |      1.1393ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/26 - 02:11:06 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/26 - 02:11:06 | 200 |      1.7836ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/26 - 02:11:06 | 200 |       859.1Âµs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/26 - 02:11:06 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/26 - 02:11:28 | 200 |      1.6734ms |             ::1 | POST     "/auth/api/v1/sign-in"
[GIN] 2024/09/26 - 02:12:14 | 200 |     10.6566ms |             ::1 | POST     "/journal/api/v1/teacher-notes"
