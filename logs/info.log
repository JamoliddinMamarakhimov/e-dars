[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN] 2024/09/13 - 17:46:38 | 200 |     36.5243ms |             ::1 | GET      "/ping"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN] 2024/09/13 - 17:47:27 | 200 |     20.8332ms |             ::1 | GET      "/ping"
Error #01: http: wrote more than the declared Content-Length
[GIN] 2024/09/13 - 17:47:32 | 200 |       367.1µs |             ::1 | GET      "/ping"
Error #01: http: wrote more than the declared Content-Length
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN] 2024/09/13 - 17:47:47 | 200 |            0s |             ::1 | GET      "/ping"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 13:40:42 | 200 |     42.3766ms |             ::1 | GET      "/ping"
[GIN] 2024/09/14 - 13:41:21 | 404 |            0s |             ::1 | GET      "/users/1"
[GIN] 2024/09/14 - 13:42:02 | 400 |      5.5498ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 13:43:02 | 400 |      1.1041ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 13:43:26 | 500 |     11.0202ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 13:43:32 | 500 |      1.7271ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 13:44:24 | 500 |      3.7375ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:15:00 | 500 |      5.9468ms |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 14:15:18 | 400 |         637µs |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:16:59 | 500 |      8.0529ms |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 14:17:11 | 500 |       1.393ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:17:40 | 500 |      8.1655ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:18:30 | 500 |      4.8226ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:27:29 | 500 |      7.3013ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:27:59 | 500 |      4.7062ms |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 14:28:58 | 500 |      2.4951ms |             ::1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:50:19 | 201 |      4.9003ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 14:50:49 | 200 |      1.9611ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 14:52:36 | 500 |      5.0918ms |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 14:53:21 | 400 |            0s |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 14:53:31 | 201 |      2.9519ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:55:46 | 500 |      4.2889ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:56:02 | 201 |      3.8544ms |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 14:56:10 | 500 |      4.3484ms |             ::1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (3 handlers)
[GIN] 2024/09/14 - 14:56:56 | 201 |      3.5079ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 14:57:03 | 201 |      2.8987ms |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 15:14:20 | 400 |      1.0199ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 15:14:42 | 201 |       2.849ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 15:14:49 | 401 |            0s |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:15:09 | 200 |      1.3462ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:15:42 | 403 |       504.6µs |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:16:26 | 200 |      1.3575ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:16:51 | 403 |            0s |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:17:07 | 200 |      1.0392ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:17:24 | 403 |            0s |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:17:25 | 403 |            0s |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 15:19:52 | 200 |      2.5805ms |             ::1 | POST     "/auth/sign-in"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 15:22:55 | 201 |      6.7484ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 15:23:37 | 200 |      1.5128ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:23:55 | 403 |            0s |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 15:24:36 | 403 |       582.3µs |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:24:43 | 200 |      1.6636ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:26:03 | 403 |            0s |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 15:28:37 | 200 |      2.4162ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:29:01 | 201 |      4.2011ms |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:29:39 | 400 |       577.8µs |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:30:02 | 200 |         1.2ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:30:20 | 403 |       552.3µs |             ::1 | POST     "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 15:41:49 | 201 |       7.277ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 15:42:16 | 201 |      2.1265ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 15:42:44 | 200 |      1.1475ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 15:43:52 | 403 |            0s |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:43:57 | 401 |            0s |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:44:29 | 201 |      2.5681ms |             ::1 | POST     "/users"
[GIN] 2024/09/14 - 15:44:36 | 200 |       817.3µs |             ::1 | GET      "/users/1"
[GIN] 2024/09/14 - 15:46:23 | 200 |      2.0945ms |             ::1 | GET      "/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 15:49:27 | 400 |      1.1688ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 15:49:37 | 200 |      1.1994ms |             ::1 | GET      "/users/1"
[GIN] 2024/09/14 - 15:49:58 | 200 |       504.5µs |             ::1 | GET      "/users/2"
[GIN] 2024/09/14 - 15:50:11 | 200 |      1.9279ms |             ::1 | GET      "/users/3"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] redirecting request 301: /swagger/ --> /swagger/
[GIN] 2024/09/14 - 16:52:00 | 404 |            0s |             ::1 | GET      "/swagger/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 16:56:10 | 200 |      3.2588ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/14 - 16:56:10 | 200 |      1.2455ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/14 - 16:56:10 | 200 |      2.6495ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/14 - 16:56:10 | 200 |          79µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/14 - 16:56:10 | 200 |       810.7µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/14 - 16:56:10 | 200 |       998.6µs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/14 - 16:57:04 | 500 |     27.8522ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 16:57:09 | 500 |      4.0845ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/14 - 16:59:01 | 200 |      18.372ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 16:59:32 | 404 |            0s |             ::1 | GET      "/api/users"
[GIN] 2024/09/14 - 16:59:42 | 404 |            0s |             ::1 | GET      "/api/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/14 - 17:02:17 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/14 - 17:02:17 | 200 |       3.124ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/14 - 17:02:17 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/14 - 17:02:17 | 200 |      3.1808ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/14 - 17:02:18 | 200 |      1.4855ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/14 - 17:02:18 | 200 |       190.1µs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/14 - 17:03:15 | 400 |      6.5962ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 17:03:54 | 200 |      3.7904ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 17:04:32 | 200 |      7.1474ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/14 - 17:05:06 | 404 |            0s |             ::1 | GET      "/api/users"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:04:21 | 200 |       2.758ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:04:21 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:04:21 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:04:21 | 200 |     19.9143ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:04:21 | 200 |      1.1335ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:04:22 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/15 - 16:06:19 | 500 |     20.6002ms |             ::1 | POST     "/auth/sign-up"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:08:23 | 200 |       1.012ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:08:23 | 200 |      1.8426ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:08:23 | 200 |      1.0127ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:08:23 | 200 |       999.9µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:08:23 | 200 |         592µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:08:23 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/15 - 16:08:35 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:08:35 | 200 |       896.9µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:08:35 | 200 |      2.3648ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:08:35 | 200 |      5.1055ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:08:35 | 304 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/15 - 16:08:35 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:09:27 | 200 |       507.2µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:09:27 | 200 |      1.0035ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:09:27 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:09:27 | 200 |     26.7377ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:09:27 | 200 |       609.3µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:09:27 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/15 - 16:09:59 | 201 |     14.3079ms |             ::1 | POST     "/auth/sign-up"
[GIN] 2024/09/15 - 16:10:35 | 200 |      3.9907ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/15 - 16:11:02 | 404 |            0s |             ::1 | GET      "/api/users"
[GIN] 2024/09/15 - 16:11:34 | 404 |            0s |             ::1 | GET      "/api/users"
[GIN] 2024/09/15 - 16:11:37 | 404 |            0s |             ::1 | GET      "/api/users"
[GIN] 2024/09/15 - 16:11:52 | 404 |            0s |             ::1 | GET      "/api/users/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:14:05 | 200 |       2.004ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:14:05 | 200 |       996.5µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:14:05 | 200 |       510.6µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:14:05 | 200 |       762.2µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:14:20 | 401 |            0s |             ::1 | GET      "/users/2"
[GIN] 2024/09/15 - 16:15:03 | 200 |     12.6678ms |             ::1 | POST     "/auth/sign-in"
[GIN] 2024/09/15 - 16:15:36 | 200 |       5.763ms |             ::1 | GET      "/users"
[GIN] 2024/09/15 - 16:16:47 | 200 |      3.8258ms |             ::1 | GET      "/users/2"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:23:02 | 200 |       937.4µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:23:02 | 200 |       531.9µs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:23:02 | 200 |      1.0098ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:23:02 | 200 |      1.0364ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:23:07 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:23:07 | 200 |      3.6322ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:23:07 | 200 |      3.6322ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:23:07 | 200 |      2.6271ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:23:07 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/15 - 16:23:07 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:23:21 | 404 |            0s |             ::1 | POST     "/ping"
[GIN] 2024/09/15 - 16:23:56 | 404 |            0s |             ::1 | POST     "/ping"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:24:47 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:24:47 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:24:47 | 200 |      1.0003ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:24:47 | 200 |       999.2µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:24:48 | 200 |       672.6µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:24:48 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2024/09/15 - 16:24:53 | 200 |     89.5047ms |             ::1 | GET      "/ping"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:27:11 | 200 |      1.0098ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:27:11 | 200 |       983.6µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:27:11 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:27:11 | 200 |      1.9222ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:27:11 | 200 |       996.8µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:27:11 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (3 handlers)
[GIN-debug] GET    /ping                     --> e-dars/pkg/controllers.PingPong (3 handlers)
[GIN-debug] POST   /auth/sign-up             --> e-dars/pkg/controllers.SignUp (3 handlers)
[GIN-debug] POST   /auth/sign-in             --> e-dars/pkg/controllers.SignIn (3 handlers)
[GIN-debug] GET    /users                    --> e-dars/pkg/controllers.GetAllUsers (4 handlers)
[GIN-debug] GET    /users/:id                --> e-dars/pkg/controllers.GetUserByID (4 handlers)
[GIN-debug] POST   /users                    --> e-dars/pkg/controllers.CreateNewUser (4 handlers)
[GIN] 2024/09/15 - 16:27:52 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2024/09/15 - 16:27:52 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2024/09/15 - 16:27:52 | 200 |       510.6µs |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2024/09/15 - 16:27:52 | 200 |      1.0875ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2024/09/15 - 16:27:52 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2024/09/15 - 16:27:52 | 200 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
