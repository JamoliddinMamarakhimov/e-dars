basePath: /
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.accessTokenResponse:
    properties:
      access_token:
        type: string
    type: object
  controllers.defaultResponse:
    properties:
      message:
        type: string
    type: object
  models.ClassUser:
    properties:
      class_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.Group:
    properties:
      code_name:
        type: string
      id:
        type: integer
    type: object
  models.Role:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  models.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.SwagClass:
    properties:
      classroom_number:
        type: integer
      desc:
        type: string
      name:
        type: string
    type: object
  models.SwagClassInfo:
    properties:
      classroom_number:
        type: integer
      desc:
        type: string
      name:
        type: string
      teacher:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.SwagUser:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone:
        type: string
      role_code:
        type: string
      username:
        type: string
    type: object
  models.SwagUserForUpdateByAdmin:
    properties:
      email:
        type: string
      full_name:
        type: string
      group_id:
        type: integer
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      phone:
        type: string
      role_code:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deactivated_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      group:
        $ref: '#/definitions/models.Group'
      group_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      password:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      role_code:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.UserPassword:
    properties:
      old_password:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for E-dars Application
  title: E-dars API
  version: "1.0"
paths:
  /auth/api/v1/sign-in:
    post:
      consumes:
      - application/json
      description: sign in to account
      operationId: sign-in-to-account
      parameters:
      - description: sign-in info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.accessTokenResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/api/v1/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: SignUp
      tags:
      - auth
  /classes/api/v1/:
    get:
      description: get list of all classes
      operationId: get-all-classes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SwagClassInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Classes
      tags:
      - classes
    post:
      consumes:
      - application/json
      description: create new class
      operationId: create-class
      parameters:
      - description: New Class info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagClass'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Class
      tags:
      - classes
  /classes/api/v1/set/:
    post:
      consumes:
      - application/json
      description: Set Class to Teacher
      operationId: set-class-to-teacher
      parameters:
      - description: Info for setting
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ClassUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.defaultResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Set Class to Teacher
      tags:
      - classes
  /classes/api/v1/update/{id}:
    put:
      consumes:
      - application/json
      description: Update class by ID
      operationId: update-class
      parameters:
      - description: id of the class
        in: path
        name: id
        required: true
        type: integer
      - description: Update class data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagClass'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Class
      tags:
      - classes
  /ping:
    get:
      consumes:
      - application/json
      description: Show logo if check is OK
      operationId: ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Check Connection
      tags:
      - check
  /users/api/v1/:
    get:
      description: get list of all users
      operationId: get-all-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SwagUserForUpdateByAdmin'
            type: array
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create new user
      operationId: create-user
      parameters:
      - description: New User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create User
      tags:
      - users
  /users/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Return user by ID
      operationId: return-user
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Return user by ID
      tags:
      - users
    get:
      description: get user by ID
      operationId: get-user-by-id
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagUserForUpdateByAdmin'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get User By ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user by ID
      operationId: update-user
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: integer
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagUserForUpdateByAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwagUserForUpdateByAdmin'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user by ID
      tags:
      - users
  /users/api/v1/change-password:
    patch:
      consumes:
      - application/json
      description: Change user`s password to new by User
      operationId: change-password
      parameters:
      - description: User password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Change user`s password to new by User
      tags:
      - users
  /users/api/v1/deactivate/{id}:
    patch:
      consumes:
      - application/json
      description: Deactivate user by ID
      operationId: deactivate-user
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Deactivate user by ID
      tags:
      - users
  /users/api/v1/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      operationId: delete-user
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user by ID
      tags:
      - users
  /users/api/v1/reset-password/{id}:
    patch:
      description: Reset user`s password to default by ID
      operationId: reset-user-password
      parameters:
      - description: id of the user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Reset user`s password to default by ID
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
